}
plot_lca_profiles <- function(profiles, ncol=2, y_lab = 'model estimate'){
nclasses <- profiles$segment %>% levels() %>% length()
ggplot2::ggplot(profiles, aes(x = as.factor(segment), y = est, color = segment))+
ggplot2::facet_wrap(.~item,  scales = "free", ncol = ncol)+
ggplot2::geom_errorbar(aes(ymin = lower, ymax = upper))+
ggplot2::geom_point(size = 2)+
ggplot2::geom_point(aes(alpha = pzero, y = yposinflation), size =20) +
ggplot2::geom_text(aes(y = yposinflation, label = pzero), vjust = 0.2, size = 3, color = 'black')+
ggplot2::scale_color_discrete('')+
ggplot2::guides(alpha = 'none')+
ggplot2::theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
ggplot2::guides(color = guide_legend(override.aes = list(size = 5)))+
ggplot2::xlab('') +
ggplot2::ylab(y_lab)
}
extract_profiles_for_plotting(model)
erg <- extract_profiles_for_plotting(model)
extract_profiles_for_plotting <- function(model, noinflationlabel = 'no\nzero inflation'){
profiles <- extract_profile(model = model)
means <- get_means_from_profiles(profiles)
variances <- get_variances_from_profiles(profiles)
pzero <- get_pzero_from_profiles(profiles)
allparameters <- combine_all_profile_items(means, variances, pzero, noinflationlabel)
profile_ready <- calculate_ypos_for_pzero(allparameters)
# profile_ready <-make_class_lables(model, profile_ready)
profile_ready
}
erg <- extract_profiles_for_plotting(model)
View(erg)
erg <- extract_profile()mdoel
erg <- extract_profile(model)
View(erg)
View(erg)
erg <- extract_profiles_for_plotting(model)
View(erg)
glimpse(erg)
test_active_file()
test_active_file()
library(devtools)
load_all()
test <- define_lca(testdata, 'test', 'id', negbin = 'var7', poisson = 'var8', starts = 10L, cores = 16L, nclasses = 2)
res <- perform_lca(test)
View(res)
res$plots[[]]
res$plots[[1]]
View(res)
View(res[["models"]][[1]][["test_model1_lca.1_test_model1_lca.out"]][["parameters"]][["unstandardized"]])
View(res[["models"]][[1]][["test_model1_lca.2_test_model1_lca.out"]][["parameters"]][["unstandardized"]])
testdata$var7 %>% hist
testdata$var7 %>% hist(break = 100)
testdata$var7 %>% hist(breaks = 100)
profiles <- extract_profile(model, settings)
model <- testresults$models[[2]][[2]]
settings <- testresults$settings
profiles <- extract_profile(model, settings)
means <- get_means_from_profiles(profiles)
variances <- get_variances_from_profiles(profiles)
View(means)
View(variances)
load_all()
profiles <- extract_profile(model, settings)
means <- get_means_from_profiles(profiles)
variances <- get_variances_from_profiles(profiles)
View(variances)
View(settings)
View(settings)
# generate testresults
settings <- define_lca(testdata, 'test','id', nclasses = 3, starts = 20L, cores = 16,
use = c('var1', 'var3', 'var4', 'var5', 'var6', 'var7', 'var8'),
categorical = c('var1'),
censored_above = c('var6'),
censored_below = c('var3', 'var4'),
poisson = 'var8',
negbin = 'var7',
inflated = c('var7', 'var4'))
# generate testresults
testsettings <- define_lca(testdata, 'test','id', nclasses = 3, starts = 20L, cores = 16,
use = c('var1', 'var3', 'var4', 'var5', 'var6', 'var7', 'var8'),
categorical = c('var1'),
censored_above = c('var6'),
censored_below = c('var3', 'var4'),
poisson = 'var8',
negbin = 'var7',
inflated = c('var7', 'var4'))
testresults <- perform_lca(settings)
use_data(testresults,
internal = T,
overwrite = T)
test_active_file()
profiles <- extract_profile(model, settings)
means <- get_means_from_profiles(profiles)
variances <- get_variances_from_profiles(profiles)
View(profiles)
load_all()
profiles <- extract_profile(model, settings)
means <- get_means_from_profiles(profiles)
variances <- get_variances_from_profiles(profiles)
View(profiles)
View(settings)
model <- testresults$models[[2]][[2]]
profiles <- extract_profile(model, settings)
means <- get_means_from_profiles(profiles)
variances <- get_variances_from_profiles(profiles)
settings <- testresults$settings
View(settings)
View(profiles)
View(profiles)
means <- get_means_from_profiles(profiles)
variances <- get_variances_from_profiles(profiles)
View(means)
View(settings)
View(means)
?expect_equal()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
View(profiles)
test_active_file()
test_active_file()
errors <- get_errors_from_profiles(profiles)
View(errors)
View(errors)
View(errors)
test_active_file()
divvar7 <- dplyr::filter(profiles, param == 'Dispersion' & item == 'var7') %>% dplyr::pull(est)
rm(list=ls(
))
test_active_file()
test_active_file()
test_active_file()
test_active_file()
settings <- testresults$settings
settings$negbin
settings$negbin
test_active_file()
profiles <- extract_profile(model, settings)
means <- get_means_from_profiles(profiles)
errors <- get_errors_from_profiles(profiles)
model <- testresults$models
model <- testresults$models[[1]]$test_model1_lca.2_test_model1_lca.out
profiles <- extract_profile(model, settings)
means <- get_means_from_profiles(profiles)
errors <- get_errors_from_profiles(profiles)
means <- correct_negbin_means(means, settings)
View(errors)
View(profiles)
correct_negbin_poisson_errors <- function(means, errors, profiles, settings){
errors_dispersion <- profiles %>%
dplyr::filter(param == 'Dispersion') %>% dplyr::select(param, item, 'disp' = est) %>%
dplyr::glimpse() %>%
dplyr::inner_join(means) %>% dplyr::inner_join(errors) %>%
dplyr::mutate(upper = est + sqrt(est + exp(disp) * est ** 2),
lower = est + sqrt(est + exp(disp) * est ** 2)) %>%
dplyr::select(upper, lower, segment, item)
print(errors_dispersion)
errors %>% dplyr::filter(! .data[['item']] %in% settings$negbin) %>%
rbind(errors_dispersion)
}
correct_negbin_means(means, errors, profiles, settings)
correct_negbin_poisson_errors(means, errors, profiles, settings)
correct_negbin_poisson_errors <- function(means, errors, profiles, settings){
errors_dispersion <- profiles %>%
dplyr::filter(param == 'Dispersion') %>% dplyr::select(item, 'disp' = est) %>%
dplyr::glimpse() %>%
dplyr::inner_join(means) %>% dplyr::inner_join(errors) %>%
dplyr::mutate(upper = est + sqrt(est + exp(disp) * est ** 2),
lower = est + sqrt(est + exp(disp) * est ** 2)) %>%
dplyr::select(upper, lower, segment, item)
print(errors_dispersion)
errors %>% dplyr::filter(! .data[['item']] %in% settings$negbin) %>%
rbind(errors_dispersion)
}
correct_negbin_poisson_errors(means, errors, profiles, settings)
correct_negbin_poisson_errors <- function(means, errors, profiles, settings){
errors_dispersion <- profiles %>%
dplyr::filter(param == 'Dispersion') %>% dplyr::select(segment, item, 'disp' = est) %>%
dplyr::glimpse() %>%
dplyr::inner_join(means) %>% dplyr::inner_join(errors) %>%
dplyr::mutate(upper = est + sqrt(est + exp(disp) * est ** 2),
lower = est + sqrt(est + exp(disp) * est ** 2)) %>%
dplyr::select(upper, lower, segment, item)
print(errors_dispersion)
errors %>% dplyr::filter(! .data[['item']] %in% settings$negbin) %>%
rbind(errors_dispersion)
}
correct_negbin_poisson_errors(means, errors, profiles, settings)
test_active_file()
errors_dispersion <- profiles %>%
dplyr::filter(param == 'Dispersion') %>% dplyr::select(segment, item, 'disp' = est) %>%
dplyr::glimpse() %>%
dplyr::inner_join(means) %>% dplyr::inner_join(errors) %>%
dplyr::mutate(upper = est + sqrt(est + exp(disp) * est ** 2),
lower = est + sqrt(est + exp(disp) * est ** 2)) %>%
dplyr::select(upper, lower, segment, item)
print(errors_dispersion)
errors %>% dplyr::filter(! .data[['item']] %in% settings$negbin) %>%
rbind(errors_dispersion)
errors %>% dplyr::filter(! item %in% settings$negbin) %>%
rbind(errors_dispersion)
test_active_file()
test_active_file()
use_test('plot_profiles')
test_active_file()
rm(errors)
test_active_file()
model <- testresults$models[[2]][[2]]
settings <- testresults$settings
profiles <- extract_profile(model, settings)
means <- get_means_from_profiles(profiles)
errors <- get_errors_from_profiles(profiles)
negbinmeans <- correct_negbin_means(means, settings)
counterorrs <- correct_negbin_poisson_errors(mean, errors, profiles, settings)
test_active_file()
negbinmeans <- correct_negbin_means(means, settings)
expect_equal(dplyr::filter(negbinmeans, item =='var7') %>% dplyr::pull(est),
dplyr::filter(means, item == 'var7') %>% dplyr::pull(est) %>% exp)
counterorrs <- correct_negbin_poisson_errors(means, errors, profiles, settings)
View(counterorrs)
View(errors)
rm(list=ls())
library(devtools)
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
suppressMessages(1 +3 )
suppressMessages(1 +3 %>%  add(3))
suppressMessages(1 +3 %>%  paste('d'))
suppressMessages((1 +3) %>%  paste('d'))
test_active_file()
?suppressMessages
test_active_file()
test_active_file()
test_active_file()
test_active_file()
model <- testresults$models[[2]][[2]]
model <- testresults$models[[2]][[3]]
settings <- testresults$settings
profile_variables <- c('param', 'item', 'est', 'se', 'est_se', 'pval', 'segment', 'level')
extract_profile(model, settings)
extract_profile_for_plotting(model, settings)
extract_profile_for_plotting(model, settings) %>% colnames()
test_active_file()
test_active_file()
test_active_file()
model <- testresults$models[[2]][[3]]
settings <- testresults$settings
profiles <- extract_profile(model, settings)
profiles %>%
dplyr::filter(param == 'Probabilities')
profile_variables
profiles %>%
dplyr::filter(param == 'Probabilities') %>%
dplyr::mutate(upper = NA,
lower = NA,
pzero = '')
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
rm(list=ls())
model <- testresults$models[[2]][[3]]
settings <- testresults$settings
profiles <- extract_profile_for_plotting(model, settings)
View(profiles)
test_active_file()
View(profiles)
View(profiles)
plot_lca_profiles(profiles)
plot_lca_profiles(profiles)
use_package("ggplot2")
plot_lca_profiles(profiles)
ggplot2::ggplot(profiles, ggplot2::aes(x = as.factor(segment), y = est, color = segment))
ggplot2::ggplot(profiles, ggplot2::aes(x = as.factor(segment), y = est, color = segment))+
ggplot2::facet_wrap(.~item,  scales = "free", ncol = ncol)+
ggplot2::geom_errorbar(aes(ymin = lower, ymax = upper))+
ggplot2::geom_point(size = 2)+
ggplot2::geom_point(ggplot2::aes(alpha = pzero, y = yposinflation), size =20) +
ggplot2::geom_text(ggplot2::aes(y = yposinflation, label = pzero), vjust = 0.2, size = 3, color = 'black')+
ggplot2::scale_color_discrete('')+
ggplot2::guides(alpha = 'none')+
ggplot2::theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
ggplot2::guides(color = guide_legend(override.aes = list(size = 5)))+
ggplot2::xlab('') +
ggplot2::ylab('model estimate')
plot_lca_profiles <- function(profiles, ncol_plot=2){
nclasses <- profiles$segment %>% levels() %>% length()
ggplot2::ggplot(profiles, ggplot2::aes(x = as.factor(segment), y = est, color = segment))+
ggplot2::facet_wrap(.~item,  scales = "free", ncol = ncol_plot)+
ggplot2::geom_errorbar(aes(ymin = lower, ymax = upper))+
ggplot2::geom_point(size = 2)+
ggplot2::geom_point(ggplot2::aes(alpha = pzero, y = yposinflation), size =20) +
ggplot2::geom_text(ggplot2::aes(y = yposinflation, label = pzero), vjust = 0.2, size = 3, color = 'black')+
ggplot2::scale_color_discrete('')+
ggplot2::guides(alpha = 'none')+
ggplot2::theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
ggplot2::guides(color = guide_legend(override.aes = list(size = 5)))+
ggplot2::xlab('') +
ggplot2::ylab('model estimate')
}
plot_lca_profiles(profiles)
library(ggplot2)
plot_lca_profiles(profiles)
plot_metric_profiles <- function(profiles, ncol_plot=2){
nclasses <- profiles$segment %>% levels() %>% length()
profiles <- dplyr::filter(profiles, param != 'Probabilities')
ggplot2::ggplot(profiles, ggplot2::aes(x = as.factor(segment), y = est, color = segment))+
ggplot2::facet_wrap(.~item,  scales = "free", ncol = ncol_plot)+
ggplot2::geom_errorbar(aes(ymin = lower, ymax = upper))+
ggplot2::geom_point(size = 2)+
ggplot2::geom_point(ggplot2::aes(alpha = pzero, y = yposinflation), size =20) +
ggplot2::geom_text(ggplot2::aes(y = yposinflation, label = pzero), vjust = 0.2, size = 3, color = 'black')+
ggplot2::scale_color_discrete('')+
ggplot2::guides(alpha = 'none')+
ggplot2::theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
ggplot2::guides(color = guide_legend(override.aes = list(size = 5)))+
ggplot2::xlab('') +
ggplot2::ylab('model estimate')
}
plot_lca_profiles(profiles)
plot_metric_profiles(profiles)
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
model <- testresults$models[[2]][[2]]
settings <- testresults$settings
profiles <- extract_profile(model, settings)
means <- get_means_from_profiles(profiles)
errors <- get_errors_from_profiles(profiles)
extract_profile_for_plotting(model, settings)
profile <- extract_profile_for_plotting(model, settings)
plot_metric_profiles(profile)
test_active_file()
model <- testresults$models[[2]][[3]]
settings <- testresults$settings
profiles <- extract_profile(model, settings)
View(profiles)
means <- get_means_from_profiles(profiles)
errors <- get_errors_from_profiles(profiles)
countmeans <- correct_negbin_poisson_means(means, settings)
counterorrs <- correct_negbin_poisson_errors(countmeans, errors, profiles, settings)
View(counterorrs)
View(countmeans)
profiles <- extract_profile(model, settings)
means <- get_means_from_profiles(profiles)
errors <- get_errors_from_profiles(profiles)
means <- correct_negbin_poisson_means(means, settings)
errors <- correct_negbin_poisson_errors(means, errors, profiles, settings)
pzero <- get_pzero_from_profiles(profiles)
categorical <- get_categorical_from_profiles(profiles)
metric <- combine_metric_items(means, errors, pzero)
metric <- calculate_ypos_for_pzero(metric)
profile_ready <- rbind(metric, categorical)
profile_ready
View(profile_ready)
test_active_file()
test_active_file()
ifelse()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
View(profile)
test_active_file()
test_active_file()
View(profile)
test_active_file()
test_active_file()
test_active_file()
test_active_file()
extract_profile_for_plotting(model, settings)
extract_profile_for_plotting(model, settings) %>% plot_metric_profiles()
extract_profile_for_plotting(model, settings) %>% plot_metric_profiles()
profiles <- dplyr::filter(profiles, param != 'Probabilities') %>%
dplyr::mutate(pzero_alpha = ifelse(pzero == '', 0, 0.5))
profiles <- dplyr::filter(profiles, param != 'Probabilities') %>%
dplyr::mutate(pzero_alpha = ifelse(pzero == '', 0, 0.5))
extract_profile_for_plotting(model, settings) %>% plot_metric_profiles()
extract_profile_for_plotting(model, settings) %>% plot_metric_profiles()
plot_metric_profiles <- function(profiles, ncol_plot=2){
nclasses <- profiles$segment %>% levels() %>% length()
profiles <- dplyr::filter(profiles, param != 'Probabilities') %>%
dplyr::mutate(pzero_alpha = ifelse(pzero == '', 0, 0.5))
ggplot2::ggplot(profiles, ggplot2::aes(x = as.factor(segment), y = est, color = segment))+
ggplot2::facet_wrap(.~item,  scales = "free", ncol = ncol_plot)+
ggplot2::geom_errorbar(aes(ymin = lower, ymax = upper))+
ggplot2::geom_point(size = 2)+
ggplot2::geom_point(ggplot2::aes(alpha = pzero_alpha, y = yposinflation), size =20) +
ggplot2::geom_text(ggplot2::aes(y = yposinflation, label = pzero), vjust = 0.2, size = 3, color = 'black')+
ggplot2::scale_color_discrete('')+
ggplot2::guides(alpha = 'none')+
ggplot2::theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
ggplot2::guides(color = guide_legend(override.aes = list(size = 5)))+
ggplot2::xlab('') +
ggplot2::ylab('model estimate')
}
extract_profile_for_plotting(model, settings) %>% plot_metric_profiles()
load_all()
extract_profile_for_plotting(model, settings) %>% plot_metric_profiles()
plot_metric_profiles <- function(profiles, ncol_plot=2){
nclasses <- profiles$segment %>% levels() %>% length()
profiles <- dplyr::filter(profiles, param != 'Probabilities') %>%
dplyr::mutate(pzero_alpha = ifelse(pzero == '', 0, 0.5))
ggplot2::ggplot(profiles, ggplot2::aes(x = as.factor(segment), y = est, color = segment))+
ggplot2::facet_wrap(.~item,  scales = "free", ncol = ncol_plot)+
ggplot2::geom_errorbar(aes(ymin = lower, ymax = upper))+
ggplot2::geom_point(size = 2)+
ggplot2::geom_point(ggplot2::aes(alpha = pzero_alpha, y = yposinflation), size =20) +
ggplot2::geom_text(ggplot2::aes(y = yposinflation, label = pzero), vjust = 0.2, size = 3, color = 'black')+
ggplot2::scale_color_discrete('')+
ggplot2::guides(alpha = 'none')+
ggplot2::theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
ggplot2::guides(color = guide_legend(override.aes = list(size = 5)))+
ggplot2::xlab('') +
ggplot2::ylab('model estimate')
}
extract_profile_for_plotting(model, settings) %>% plot_metric_profiles()
load_all()
extract_profile_for_plotting(model, settings) %>% plot_metric_profiles()
plot_metric_profiles <- function(profiles, ncol_plot=2){
nclasses <- profiles$segment %>% levels() %>% length()
profiles <- dplyr::filter(profiles, param != 'Probabilities') %>%
dplyr::mutate(pzero_alpha = ifelse(pzero == '', 1, 0.5))
ggplot2::ggplot(profiles, ggplot2::aes(x = as.factor(segment), y = est, color = segment))+
ggplot2::facet_wrap(.~item,  scales = "free", ncol = ncol_plot)+
ggplot2::geom_errorbar(aes(ymin = lower, ymax = upper))+
ggplot2::geom_point(size = 2)+
ggplot2::geom_point(ggplot2::aes(alpha = pzero_alpha, y = yposinflation), size =20) +
ggplot2::geom_text(ggplot2::aes(y = yposinflation, label = pzero), vjust = 0.2, size = 3, color = 'black')+
ggplot2::scale_color_discrete('')+
ggplot2::guides(alpha = 'none')+
ggplot2::theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
ggplot2::guides(color = guide_legend(override.aes = list(size = 5)))+
ggplot2::xlab('') +
ggplot2::ylab('model estimate')
}
extract_profile_for_plotting(model, settings) %>% plot_metric_profiles()
plot_metric_profiles <- function(profiles, ncol_plot=2){
nclasses <- profiles$segment %>% levels() %>% length()
profiles <- dplyr::filter(profiles, param != 'Probabilities') %>%
dplyr::mutate(pzero_alpha = ifelse(pzero == '', 0, 0.5))
ggplot2::ggplot(profiles, ggplot2::aes(x = as.factor(segment), y = est, color = segment))+
ggplot2::facet_wrap(.~item,  scales = "free", ncol = ncol_plot)+
ggplot2::geom_errorbar(aes(ymin = lower, ymax = upper))+
ggplot2::geom_point(size = 2)+
ggplot2::geom_point(ggplot2::aes(alpha = pzero_alpha, y = yposinflation), size =20) +
ggplot2::geom_text(ggplot2::aes(y = yposinflation, label = pzero), vjust = 0.2, size = 3, color = 'black')+
ggplot2::scale_color_discrete('')+
ggplot2::guides(alpha = 'none')+
ggplot2::theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
ggplot2::guides(color = guide_legend(override.aes = list(size = 5)))+
ggplot2::xlab('') +
ggplot2::ylab('model estimate')
}
extract_profile_for_plotting(model, settings) %>% plot_metric_profiles()
plot_metric_profiles <- function(profiles, ncol_plot=2){
nclasses <- profiles$segment %>% levels() %>% length()
profiles <- dplyr::filter(profiles, param != 'Probabilities') %>%
dplyr::mutate(pzero_alpha = ifelse(pzero == '', 0, 0.5)) %>% dplyr::glimpse()
ggplot2::ggplot(profiles, ggplot2::aes(x = as.factor(segment), y = est, color = segment))+
ggplot2::facet_wrap(.~item,  scales = "free", ncol = ncol_plot)+
ggplot2::geom_errorbar(aes(ymin = lower, ymax = upper))+
ggplot2::geom_point(size = 2)+
ggplot2::geom_point(ggplot2::aes(alpha = pzero_alpha, y = yposinflation), size =20) +
ggplot2::geom_text(ggplot2::aes(y = yposinflation, label = pzero), vjust = 0.2, size = 3, color = 'black')+
ggplot2::scale_color_discrete('')+
ggplot2::guides(alpha = 'none')+
ggplot2::theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
ggplot2::guides(color = guide_legend(override.aes = list(size = 5)))+
ggplot2::xlab('') +
ggplot2::ylab('model estimate')
}
extract_profile_for_plotting(model, settings) %>% plot_metric_profiles()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
