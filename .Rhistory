censored = c(),
inflated = c(),
poisson = c(),
negbin = c(),
aux = c(),
LMRLRT = FALSE){
headers <- create_headers(analysis_name, nclasses) # incl TITLE: DATA: lines => get a list of 6 strings for each type
# create_variable_specs() # same for all types
# create_model1() # model specs for each type
# create_model2() # model specs for each type
# create_model3() # model specs for each type
# create_model4() # model specs for each type
# create_model5() # model specs for each type
# create_model6() # model specs for each type
# create_analysis() # same for all types (also with starts, yes)
# create_plot_save() # get a list of 6 strings for each type
# make_templates() # list with 6 templates
save_templates(headers) # save all templates
# return(templates)
return(NULL) #
}
create_templates(testata, 'base_lca')
load_all
load_all()
test()
?new.env
library(devtools)
load_all()
test()
?env
load_all()
test()
load_all()
test()
use_package('rlang')
test()
test()
testdata
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R", echo=TRUE)
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R", echo=TRUE)
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R", echo=TRUE)
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R", echo=TRUE)
q
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R", echo=TRUE)
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R", echo=TRUE)
rlang::env_print(lcasettings)
?env
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R", echo=TRUE)
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R", echo=TRUE)
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R", echo=TRUE)
print_env(lcasettings)
rlang::env_print(lcasettings)
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R")
parent.env(lcasettings) <- globalenv()
rlang::env_print(lcasettings)
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R")
test()
load_all()
test()
test()
test()
rlang::env_print(lca)
lca$usevariables
lca$frame
test()
lca$frame
lca$naem
lca$names
lca$usevariables
lca$categoricals
rm(lca)
rm(lcasettings)
test()
lca
test()
test()
test()
rm(list = ls())
test()
test()
test()
test()
test()
test()
test()
paste(c('a', 'b', 'c'))
paste(c('a', 'b', 'c', sep = ' '))
paste(c('a', 'b', 'c'), collapse = ' ')
test()
# Create two lists with 6 character vectors each
list1 <- list(c("a", "b"), c("c", "d"), c("e", "f"), c("g", "h"), c("i", "j"), c("k", "l"))
list2 <- list(c("1", "2"), c("3", "4"), c("5", "6"), c("7", "8"), c("9", "10"), c("11", "12"))
# Initialize an empty list to store the combined vectors
combined_list <- vector("list", length = length(list1))
# Iterate over the lists and append the vectors
for (i in seq_along(list1)) {
combined_list[[i]] <- c(list1[[i]], list2[[i]])
}
# Print the combined list
print(combined_list)
test()
test()
test()
seq(6)
lca$headers
lca$headers[[]]
lca$headers[[1]]
lca$variable_specs[[1]]
test()
test()
test()
c()
test()
use_test('tests/testthat/test-create_templates.R')
use_test('tests/test-create_templates.R')
test()
test()
test()
library(devtools)
testdata <- readRDS('data-raw/testdata.rds')
basemodel_templates <- list(readLines('data-raw/base_lca_model1_template.txt'),
readLines('data-raw/base_lca_model2_template.txt'),
readLines('data-raw/base_lca_model3_template.txt'),
readLines('data-raw/base_lca_model4_template.txt'),
readLines('data-raw/base_lca_model5_template.txt'),
readLines('data-raw/base_lca_model6_template.txt'))
use_data(testdata,
basemodel_templates,
internal = T,
overwrite = T)
?matrix()
list(c(160, 160, 160, 160, 320),
c(160, 160, 160, 160, 320))
list(c(160, 160, 160, 160, 320),
c(160, 160, 160, 160, 320)) |> length()
stopifnot(2 = 2)
stopifnot(2 == 2)
stopifnot(2 == 3)
stopifnot(2 == 3, stop('You did not supply enough stars')))
stopifnot(2 == 3, stop('You did not supply enough stars'))
# Define variables for the conditions
x <- 5
y <- 10
# Check conditions using stopifnot with custom error messages
stopifnot(
x > 0,
y < 15,
stop("Custom error message for condition y < 15"),
x + y == 15,
stop("Custom error message for condition x + y == 15")
)
type(160L)
type(160)
class(160)
typeof(160)
1 == 1 & 2 == 2
1 == 1 && 2 == 2
rep(3,2)
create_templates(frame = testdata,
'base_lca',
id = 'id',
nclasses = 4,
starts = 4
cores = 16,
create_templates(frame = testdata,
'base_lca',
id = 'id',
nclasses = 4,
starts = 4,
cores = 16,
categorical = c('cat1', 'cat2'),
aux = c('p', 'pi'))
load_all()
create_templates(frame = testdata,
'base_lca',
id = 'id',
nclasses = 4,
starts = 4,
cores = 16,
categorical = c('cat1', 'cat2'),
aux = c('p', 'pi'))
load_all()
create_templates(frame = testdata,
'base_lca',
id = 'id',
nclasses = 4,
starts = 4,
cores = 16,
categorical = c('cat1', 'cat2'),
aux = c('p', 'pi'))
load_all()
create_templates(frame = testdata,
'base_lca',
id = 'id',
nclasses = 4,
starts = 4,
cores = 16,
categorical = c('cat1', 'cat2'),
aux = c('p', 'pi'))
load_all()
create_templates(frame = testdata,
'base_lca',
id = 'id',
nclasses = 4,
starts = 4,
cores = 16,
categorical = c('cat1', 'cat2'),
aux = c('p', 'pi'))
source("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R")
create_templates(frame = testdata,
'base_lca',
id = 'id',
nclasses = 4,
starts = 4,
cores = 16,
categorical = c('cat1', 'cat2'),
aux = c('p', 'pi'))
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R")
lca$starts
load_all()
load_all
load_all()
source("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R")
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R")
lca$starts
rm(list=ls())
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R")
View(lca)
class(lca$starts)
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R")
View(lca)
lca$usevariables <- colnames(lca$frame)[! colnames(lca$frame) %in% lca$aux]
class(lca$starts) == 'numeric' && length(lca$starts == 1)
debugSource("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/create_templates.R")
View(lca)
is.integer(160)
is.integer(160L)
test()
test()
test()
list(c('a', 'b'), c('c', 'd'))
test <- list(c('a', 'b'), c('c', 'd'))
test[1, 2]
test[1]
test[[]
test[[1]]
test[[1]][2]
test()
list(1,2,3)
test <- #list(1,2,3)
tset <- list(1,2,3)
test <- tset
rm(tset)
test
testclass <- structure(test, 'easylca_settings')
testclass <- structure(test, class = 'easylca_settings')
class(test)
class(testclass)
mod <- lm(log(mpg) ~ log(disp), data = mtcars)
rm(list=ls())
devtools
library(devtools#)
library(devtools)
use_r('define_lca')
tibble()
data.frame()
class(data.frame())
class('name')
class('nclasses')
class(4)
class(4L)
class(T)
load_all()
define_lca()
testdata
define_lca(testdata, 'test', 'id')
define_lca(testdata, 'test', 'id')
load_all()
define_lca(testdata, 'test', 'id')
test <- define_lca(testdata, 'test', 'id')
load_all()
define_lca(testdata, 'test', 'id')
lca <- define_lca(testdata, 'test', 'id')
rm(test)
View(lca)
load_all()
define_lca(testdata, 'test', 'id')
test <- define_lca(testdata, 'test', 'id')
rm(lca)
class(test)
lca
as.list(test)
ls(test)
vars <- ls(test)
classes <- sapply(vars, function(var) class(get(var, envir = test)))
names(vars) <- classes
vars
names(classes) <- vars
classes
character()
use_test('define_lca')
test()
test_active_file()
test_active_file()
ls(test)
test_active_file()
test_active_file()
test_active_file()
ls(test)
define_lca(testdata, 'test', 'id')
define_lca(testdata, 'test', 'id') %>% ls
define_lca(testdata, 'test', 'id') %>% ls %>% sort()
test_active_file()
test_active_file()
test_active_file()
sapply(variables, function(var) class(get(ls(test), envir = lcasettings))
)
sapply(test, function(var) class(get(ls(test), envir = lcasettings)))
sapply(ls(test), function(var) class(get(var, envir = lcasettings))
)
sapply(ls(test), function(var) class(get(var, envir = test)))
sapply(ls(test), function(var) class(get(var, envir = test)))
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
View(test)
load_all()
use_test('define_lca')
test_active_file()
load_all()
use_test('define_lca')
test_active_file()
use_test('define_lca')
test_active_file()
load_all()
test_active_file()
test_active_file()
load_all()
test_active_file()
load_all()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
Sys.Date()
system.time()
format(Sys.Time(), "%Y%m%d_%H-%M")
format(Sys.time(), "%Y%m%d_%H-%M")
test_active_file()
load_all()
use_test('define_lca#')
use_test('define_lca')
test_active_file()
test_active_file()
colnames(testdata)
?expect_contains()
test_active_file()
test_active_file()
test <- c('a', 'b', 'c')
test[-a]
a <- 'a'
test[-a]
test[-'a']
str_remove(test, a)
load_all()
use_test('define_lca')
test_active_file()
load_all()
test_active_file()
load_all
load_all()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
test_active_file()
load_all()
use_test('define_lca')
test_active_file()
use_r('define_lca')
use_test('define_lca')
test_active_file()
use_r('define_lca')
test_active_file()
test_active_file()
load_all()
test_active_file()
expect_condition()
?expect_error
load_all()
test_active_file()
test_active_file()
test_active_file()
define_lca(testdata, 'test', 'id')
test <- define_lca(testdata, 'test', 'id')
View(test)
View(test)
test_active_file()
test_active_file()
load_all()
testdata
test_active_file()
load_all()
test_active_file()
define_lca(testdata, 'test', 'id', categorical = 'id')
load_all()
test_active_file()
load_all()
test_active_file()
View(test)
colnames(testdata)
test_active_file()
test_active_file()
load_all()
test_active_file()
test_active_file()
View(test)
load_all()
test_active_file()
load_all()
test_active_file()
load_all()
test_active_file()
load_all()
test_active_file()
load_all()
test_active_file()
test_active_file()
colnames(testdata)[colnames(testdata) != 'id']
test_active_file()
load_all()
test_active_file()
load_all()
test_active_file()
load_all()
test_active_file()
load_all()
test_active_file()
load_all()
test_active_file()
document()
load_all()
?define_lca
document()
?define_lca
document()
?define_lca
document()
?deinfe_lca
?define_lca
document()
?define_lca
lca_settings <- define_lca(testdata,
'test_lca',
'id',
nclasses = 2,
starts = list(c(160, 160, 160, 160, 160, 160),
c(320, 320, 320, 320, 320, 640))
use = c('nd', 'cat1'),
document()
?define_lca
lca_settings <- define_lca(testdata,
'test_lca',
'id',
nclasses = 2,
starts = list(c(160, 160, 160, 160, 160, 160),
c(320, 320, 320, 320, 320, 640)),
use = c('nd', 'cat1'),
categorical = 'cat1')
document()
?define_lca
lca_settings <- define_lca(testdata,
'test_lca',
'id',
nclasses = 2,
starts = list(c(160, 320),
c(160, 320),
c(160, 320),
c(320, 640),
c(320, 640),
c(320, 640)),
use = c('nd', 'cat1'),
categorical = 'cat1')
starts <- list(c(160, 320),
+                                          c(160, 320),
+                                          c(160, 320),
+                                          c(320, 640),
+                                          c(320, 640),
+                                          c(320, 640))
length(starts)
length(starts$[[1]])
length(starts[[1]])
load_all()
lca_settings <- define_lca(testdata,
'test_lca',
'id',
nclasses = 2,
starts = list(c(160, 320),
c(160, 320),
c(160, 320),
c(320, 640),
c(320, 640),
c(320, 640)),
use = c('nd', 'cat1'),
categorical = 'cat1')
starts[[1]]
starts[[1]] %>% length/
starts[[1]] %>% length()
