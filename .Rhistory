ggplot2::labs(title = paste0('chi square for Kruskall Wallis test, total entropy: ', total_entropy),
x = 'Kruskal-Wallis χ²',
y = 'indicator',
caption = '* p < 0.05, **  p < 0.01, *** p < 0.001, Bonferroni corrected')
}
plot_modeltype_class_diagnostics <- function(model, settings){
profiles <- extract_profile_for_plotting(model, settings)
metric <- plot_metric_profiles(profiles)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
design <- "AA
BC"
patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design)
}
plot_modeltype_class_diagnostics(model, settings)
erg <- plot_modeltype_class_diagnostics(model, settings)
View(erg)
erg
use_r('create_templates')
use_r('perform_lca')
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
metric <- plot_metric_profiles(profiles)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
design_portrait <- "AA
BC"
portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design_portrait)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 900,
height = 1600)
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
metric <- plot_metric_profiles(profiles)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
design_portrait <- "AA
BC"
portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design_portrait)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 9,
height = 16)
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
metric <- plot_metric_profiles(profiles)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
design_portrait <- 'AA
BC'
portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design_portrait)
design_landscape <- 'AB
AC'
landscape <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
width = c(3,1),
design = design_landscape)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'_lca/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 9,
height = 16)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 16,
height = 9)
landscape
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
metric <- plot_metric_profiles(profiles)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
design_portrait <- 'AA
BC'
portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design_portrait)
design_landscape <- 'AB
AC'
landscape <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
width = c(3,1),
design = design_landscape)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'_lca/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 9,
height = 16)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 16,
height = 9)
landscape
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
rlang::last_trace()
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
metric <- plot_metric_profiles(profiles)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
design_portrait <- 'AA
BC'
portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design_portrait)
design_landscape <- 'AB
AC'
landscape <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
width = c(3,1),
design = design_landscape)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'_lca/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 9,
height = 16)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_landscape.png'),
portrait,
width = 16,
height = 9)
landscape
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
metric <- plot_metric_profiles(profiles)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
design_portrait <- 'AA
BC'
portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design_portrait)
# design_landscape <- 'AB
#                      AC'
# landscape <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
#                                   width = c(3,1),
#                                   design = design_landscape)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'_lca/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 9,
height = 16)
# ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_landscape.png'),
#                 portrait,
#                 width = 16,
#                 height = 9)
# landscape
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
metric <- plot_metric_profiles(profiles)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
# design_portrait <- 'AA
#                     BC'
# portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
#                       heights = c(3,1),
#                       design = design_portrait)
design_landscape <- 'AB
AC'
landscape <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
width = c(3,1),
design = design_landscape)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'_lca/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
# ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
#                 portrait,
#                 width = 9,
#                 height = 16)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_landscape.png'),
portrait,
width = 16,
height = 9)
# landscape
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
metric <- plot_metric_profiles(profiles)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
design_portrait <- 'AA
BC'
portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design_portrait)
design_landscape <- 'AB
AC'
landscape <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
widths = c(3,1),
design = design_landscape)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'_lca/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 9,
height = 16)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_landscape.png'),
portrait,
width = 16,
height = 9)
landscape
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
design_portrait <- 'AA
BC'
metric <- plot_metric_profiles(profiles, ncol_plot = 2)
portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design_portrait)
metric <- plot_metric_profiles(profiles, ncol_plot = 3)
design_landscape <- 'AB
AC'
landscape <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
widths = c(3,1),
design = design_landscape)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'_lca/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 9,
height = 16)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_landscape.png'),
portrait,
width = 16,
height = 9)
landscape
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'_lca/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
design_portrait <- 'AA
BC'
metric <- plot_metric_profiles(profiles, ncol_plot = 2)
portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design_portrait)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 9,
height = 16)
metric <- plot_metric_profiles(profiles, ncol_plot = 3)
design_landscape <- 'AB
AC'
landscape <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
widths = c(3,1),
design = design_landscape)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_landscape.png'),
portrait,
width = 16,
height = 9)
landscape
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'_lca/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
design_portrait <- 'AA
BC'
metric <- plot_metric_profiles(profiles, ncol_plot = 2)
portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design_portrait)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 9,
height = 16)
metric <- plot_metric_profiles(profiles, ncol_plot = 3)
design_landscape <- 'AB
AC'
landscape <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
widths = c(3,1),
design = design_landscape)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_landscape.png'),
landscape,
width = 16,
height = 9)
landscape
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'_lca/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
design_portrait <- 'AA
BC'
metric <- plot_metric_profiles(profiles, ncol_plot = 2)
portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design_portrait)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 9,
height = 16)
metric <- plot_metric_profiles(profiles, ncol_plot = 3)
design_landscape <- 'AB
AC'
landscape <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
widths = c(3,1),
design = design_landscape)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_landscape.png'),
landscape,
width = 20,
height = 9)
landscape
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'_lca/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
design_portrait <- 'AA
BC'
metric <- plot_metric_profiles(profiles, ncol_plot = 2)
portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design_portrait)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 9,
height = 16)
metric <- plot_metric_profiles(profiles, ncol_plot = 3)
design_landscape <- 'AB
AC'
landscape <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
widths = c(3,1),
design = design_landscape)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_landscape.png'),
landscape,
width = 22,
height = 9)
landscape
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics <- function(results, type, class){
settings <- results$settings
model <- results$models[[type]][[class]]
profiles <- extract_profile_for_plotting(model, settings)
binary <- plot_binary_profiles(profiles)
kruskal <- plot_kruskal_profiles(model)
folder <- paste0(settings$folder_name, '/', settings$analysis_name, '_model', type,'_lca/plots')
if(! dir.exists(folder)){
dir.create(folder)
}
design_portrait <- 'AA
BC'
metric <- plot_metric_profiles(profiles, ncol_plot = 2)
portrait <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
heights = c(3,1),
design = design_portrait)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_portrait.png'),
portrait,
width = 9,
height = 16)
metric <- plot_metric_profiles(profiles, ncol_plot = 4)
design_landscape <- 'AB
AC'
landscape <- patchwork::wrap_plots(A = metric, B = binary, C = kruskal,
widths = c(3,1),
design = design_landscape)
ggplot2::ggsave(paste0(folder, '/diagnostic_model', type, '_', class, 'classes_landscape.png'),
landscape,
width = 22,
height = 9)
landscape
}
plot_modeltype_class_diagnostics(testresults, 3, 3)
plot_modeltype_class_diagnostics(testresults, 6, 3)
use_r('perform_lca')
test()
test_lca_results <- readRDS("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/tests/testthat/test_20240912_21-09/test_lca_results.rds")
View(test_lca_results)
test()
test()
test_lca_results <- readRDS("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/tests/testthat/test_20240912_21-21/test_lca_results.rds")
View(test_lca_results)
test()
test_active_file()
test_active_file()
test()
test()
plot_modeltype_class_diagnostics(test_lca_results,1,1)
load_all()
plot_modeltype_class_diagnostics(test_lca_results,1,1)
.get_kruskal_chisquare_from_prediction_for_item <- function(item){
are_all_in_same_class <- predicted[[toupper(item)]] %>% unique() %>% length() == 1
print(are_all_in_same_class)
if(are_all_in_same_class){ return(0) }
stats::kruskal.test(predicted[[toupper(item)]], predicted[['CLASS']])$statistic[[1]] %>%
round(2)
}
.get_kruskal_p_from_prediction_for_item <- function(item){
are_all_in_same_class <- predicted[[toupper(item)]] %>% unique() %>% length() == 1
if(are_all_in_same_class){ return('') }
pvalue <- stats::kruskal.test(predicted[[toupper(item)]], predicted[['CLASS']])$p.value
pvalue <- pvalue * nitems # Bonferroni
if(pvalue > 0.05){return('')}
if(pvalue > 0.05){return('*')}
if(pvalue > 0.01){return('**')}
return('***')
}
plot_modeltype_class_diagnostics(test_lca_results,1,1)
source("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/plot_profiles.R")
plot_modeltype_class_diagnostics(test_lca_results,1,1)
source("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/plot_profiles.R")
source("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/plot_profiles.R")
plot_modeltype_class_diagnostics(test_lca_results,1,1)
source("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/R/plot_profiles.R")
plot_modeltype_class_diagnostics(test_lca_results,1,1)
test()
model$savedata
model$savedata[['CLASS']]
model$savedata[['CLASS']] %>% unique()
model$savedata[['CLASS']] %>% unique() %>% length()
test()
test_lca_results <- readRDS("N:/Markus-Radke_Dokumente/Tutorium_TU/easylca/tests/testthat/test_20240912_22-26/test_lca_results.rds")
View(test_lca_results)
test()
test()
test()
